/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr;

import hris.ConnectionManager;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author i5
 */
public class perf1 extends javax.swing.JPanel {

    /**
     * Creates new form perf
     */
    public perf1() {
        initComponents();
        loadData();
    }
        Connection con;
    Statement stmt;
    ResultSet rs;
    DefaultTableModel model;
    perfkc kc = new perfkc();
    perfatt att = new perfatt();
    perfqa qa = new perfqa();
    perfrec rec = new perfrec();
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel25 = new javax.swing.JPanel();
        roundPanel1 = new jdev.swing.RoundPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable10 = new javax.swing.JTable();
        jTextField23 = new javax.swing.JTextField();
        jLabel107 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setBackground(java.awt.Color.white);
        setPreferredSize(new java.awt.Dimension(1098, 688));

        jPanel25.setBackground(java.awt.Color.white);

        roundPanel1.setBackground(java.awt.Color.white);
        roundPanel1.setPreferredSize(new java.awt.Dimension(1000, 500));

        jTable10.setBackground(new java.awt.Color(244, 244, 244));
        jTable10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "LOB", "Operation Manager", "QA", "Productivity", "Knowledge Check", "Attendance", "Overall"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable10.setPreferredSize(new java.awt.Dimension(500, 500));
        jTable10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable10KeyReleased(evt);
            }
        });
        jScrollPane13.setViewportView(jTable10);

        javax.swing.GroupLayout roundPanel1Layout = new javax.swing.GroupLayout(roundPanel1);
        roundPanel1.setLayout(roundPanel1Layout);
        roundPanel1Layout.setHorizontalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 1006, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );
        roundPanel1Layout.setVerticalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1022, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTextField23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField23.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField23KeyReleased(evt);
            }
        });

        jLabel107.setText("SEARCH:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Overall Performance", "Quality Performance", "Attendance", "Knowledge Check", "Productivity" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("RECORD:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel1))
                            .addComponent(jLabel107))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel107)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
  private void loadData() {
    try (
           Connection con = ConnectionManager.getConnection();
         Statement stmt = con.createStatement();
         ResultSet rs = stmt.executeQuery("SELECT cred.EmployeeID, performance.name AS Name, cred.LOB, cred.OM AS 'Operation Manager', performance.Quality AS 'QA', performance.knowledge_checker AS 'KnowledgeCheck', productivity.productivity AS 'Productivity' FROM cred INNER JOIN performance ON cred.EmployeeID = performance.EmployeeID INNER JOIN productivity ON cred.EmployeeID = productivity.id");
    ) {
        // Create a DefaultTableModel with column names
        String[] columnNames = {"ID", "Name", "LOB", "Operation Manager", "QA Score", "Productivity", "Knowledge Check"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        // Iterate over the ResultSet and add each row to the model
        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getInt("EmployeeID"),
                rs.getString("Name"),
                rs.getString("LOB"),
                rs.getString("Operation Manager"),
                rs.getDouble("QA"),
                rs.getDouble("Productivity"),
                rs.getInt("KnowledgeCheck")
            });
        }

        // Set the model to the JTable
        jTable10.setModel(model);
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
}
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
        String value = jComboBox1.getSelectedItem().toString();
        
        if (value == "Overall Performance"){
            jTable10.show();
            qa.hide();
            att.hide();
            kc.hide();
            rec.hide();
        }
        else if (value == "Attendace"){
            jTable10.hide();
            qa.hide();
            att.show();
            kc.hide();
            rec.hide();
        }
        else if (value == "Quality Performance"){
            jTable10.hide();
            qa.show();
            att.hide();
            kc.hide();
            rec.hide();
        }
        else if (value == "Knowledge Check"){
            jTable10.hide();
            qa.hide();
            att.hide();
            kc.show();
            rec.hide();
        }
        else if (value == "Productivity"){
            jTable10.hide();
            qa.hide();
            att.hide();
            kc.hide();
            rec.show();
        }

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTable10KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable10KeyReleased
        
    }//GEN-LAST:event_jTable10KeyReleased

    private void jTextField23KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField23KeyReleased
        // TODO add your handling code here:
        String searchText = jTextField23.getText().trim();
    filterTable(searchText);
    }//GEN-LAST:event_jTextField23KeyReleased
   private void filterTable(String searchText) {
    DefaultTableModel model = (DefaultTableModel) jTable10.getModel();
       TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
    jTable10.setRowSorter(sorter);
    
       RowFilter<DefaultTableModel, Object> rowFilter = RowFilter.regexFilter("(?i)" + searchText);
    sorter.setRowFilter(rowFilter);
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JTable jTable10;
    private javax.swing.JTextField jTextField23;
    private jdev.swing.RoundPanel roundPanel1;
    // End of variables declaration//GEN-END:variables
}
